import galois
import random
import numpy as np

def base_convert(i, b):
    result = []
    while i > 0:
            result.insert(0, i % b)
            i = i // b
    
    while len(result)!=4:
        result.insert(0,0)
    
    return result

def base_convert4(num):
    coefs=[]
    for i in range(0,len(num),4):
        mtemp=0
        for j in range(4):

            mtemp=int(float(str(mtemp)+str(num[i+j])))
        mtemp=int(str(int(float(mtemp))),4)    
        
        coefs.append(mtemp)
    
    return coefs

rs = galois.ReedSolomon(255,223)

Testnum=[1,0,2,3,0,2,1,0,1,1,0,3,0,1,2,1,0,2,1,3]

coefsb4=base_convert4(Testnum)
c = rs.encode(coefsb4)

coefstemp=[]
for i in range(len(c)):
   coefstemp.extend(base_convert(int(c[i]),4))
coefstemp[5]=0
coefstemp[7]=2
coefstemp[36]=0
coefstemp[22]=0
back4=base_convert4(coefstemp)
dec_m = rs.decode(back4)
